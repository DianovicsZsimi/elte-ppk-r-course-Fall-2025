6 + 4 * 5
source("~/.active-rstudio-document", echo = TRUE)
source("~/.active-rstudio-document", echo = TRUE)
source("~/.active-rstudio-document", echo = TRUE)
source("~/.active-rstudio-document", echo = TRUE)
round(6.33333333333)
round(6.33333, 2)
round (6.33333, 2)
dreamcar = "pagani"
dreamcar <- "toyota"
dreamcar = c(1, 2, 3, 4)
dreamnumber = c(1, 2)
dreamnumber + dreamcar
dreamcar = "pagani"
dreamcar = "pagani"
dreamnumber = c(1, 2)
dreamnumber + dreamcar
number1 = 5
number2 = 6
number1 + number2
number3 = number1 + number2
number4 = 4
result = number3 - number4
result = number3 - number4
result
data = gsheet2tbl("https://docs.google.com/spreadsheets/d/1fxgUb2SOZ_gvXGPIuaTJTkRqt5rvjht0PWeBa_vXvLA/edit?gid=0#gid=0"
fds
data = gsheet2tbl("https://docs.google.com/spreadsheets/d/1fxgUb2SOZ_gvXGPIuaTJTkRqt5rvjht0PWeBa_vXvLA/edit?gid=0#gid=0")
install.packages("gsheet")
library(gsheet)
library(gsheet)
data = gsheet2tbl("https://docs.google.com/spreadsheets/d/1fxgUb2SOZ_gvXGPIuaTJTkRqt5rvjht0PWeBa_vXvLA/edit?gid=0#gid=0")
View(data)
View(data)
print(data[1, 1])
View(data)
print(data[, 1])
print(data[1,])
View(data)
View(data)
is.vector(dreamnumber)
dreamnumber = c(1, 2)
is.vector(dreamnumber)
is.numeric(dreamnumber)
is.numeric(dreamnumber)
is.integer(dreamnumber)
USArrest
view(USArrest)
View(USArrest)
data = USArrests
View(data)
View(data)
View(data)
str(data)
View(datasets)
print(datasets)
data = penguins
View(data)
str(penguins)
str(data)
names(data)
row.names(data)
nrow(data)
ncol(data)
head(data)
gfdsalhjudfskjhlfdshjkl = penguins
tail(data)
head(data, 10)
data$species
is.factor(species)
is.factor(data$species)
View(data)
mean(data$body_mass)
mean(data$body_mass, na.rm = TRUE)
?penguins
round(mean(data$body_mass, na.rm = TRUE), 1)
data[, "soecies"]
data[, "species"]
data[57, "species"]
is.factor(data[, "species"])
mean(data$flipper_len)
mean(data$flipper_len, na.rm = TRUE)
data_flipper = data$flipper_len
data
source("~/.active-rstudio-document", echo = TRUE)
data
source("~/.active-rstudio-document", echo = TRUE)
data[1:5, c("species", "flipper_len")]
data[c(1:5), c("species", "flipper_len")]
data[-c(1:5), c("species", "flipper_len")]
# adelie, female, flipper lenght, mean
mean(data$flipper_len, which(species(data) == "Adelie"))
# adelie, female, flipper lenght, mean
mean(data$flipper_len, which(data$species == "Adelie"))
data = USArrests
View(data)
install.packages("tidyverse")
data |>
select(species)
library(tidyverse)
data |>
select(species)
View(data)
data = penguins
data |>
select(species)
data |>
filter(species == adelie)
data |>
filter(species == "adelie")
data |>
filter(species == "Adelie")
data |>
filter(species == "Adelie") |>
filter(sex == "female")
data |>
filter(species == "Adelie") |>
filter(sex == "female") |>
mean(flipper_len)
data |>
filter(species == "Adelie") |>
filter(sex == "female") |>
mean(flipper_len, na.rm = TRUE)
data |>
filter(species == "Adelie") |>
filter(sex == "female")
data |>
filter(species == "Adelie") |>
filter(sex == "female") |>
mean(flipper_len, na.rm = TRUE)
View(data)
data |>
filter(species == "Adelie") |>
filter(sex == "female") |>
summarize(mean(flipper_len, na.rm = TRUE))
mean_flipper = data |>
filter(species == "Adelie") |>
filter(sex == "female") |>
summarize(mean(flipper_len, na.rm = TRUE))
View(mean_flipper)
as.vector(mean_flipper) = data |>
filter(species == "Adelie") |>
filter(sex == "female") |>
summarize(mean(flipper_len, na.rm = TRUE))
as.numeric(mean_flipper) = data |>
filter(species == "Adelie") |>
filter(sex == "female") |>
summarize(mean(flipper_len, na.rm = TRUE))
str(mean_flipper)
as.factor(mean_flipper)
mean_flipper = as.factor(mean_flipper)
mean_flipper = as.factor(mean_flipper[1,1])
mean_flipper = as.numeric(mean_flipper[1,1])
mean_flipper = data |>
filter(species == "Adelie") |>
filter(sex == "female") |>
summarize(mean(flipper_len, na.rm = TRUE))
mean_flipper = as.numeric(mean_flipper[1,1])
mean_flipper = data |>
filter(species == "Adelie") |>
filter(sex == "female") |>
summarize(as.numeric(mean(flipper_len, na.rm = TRUE)))
View(mean_flipper)
library(ggplot2)
data |>
ggplot(aes(x = species, y = flipper_len)) |>
geom_histogram()
data |>
ggplot(aes(x = species, y = flipper_len)) +
geom_histogram()
data |>
ggplot(aes(x = species, y = flipper_len)) +
geom_bar()
data |>
ggplot(aes(x = species, y = flipper_len)) +
geom_bar()
data |>
ggplot(aes(y = flipper_len)) +
geom_bar()
data |>
ggplot(aes(x = flipper_len)) +
geom_bar()
data |>
ggplot(aes(x = flipper_len)) +
geom_bar(group = species)
data |>
ggplot(aes(x = flipper_len, group = specied)) +
geom_bar()
data |>
ggplot(aes(x = flipper_len, colour = species)) +
geom_bar()
data |>
ggplot(aes(x = flipper_len, fill = species)) +
geom_bar()
data |>
ggplot(aes(x = flipper_len, y = bill_len)) +
geom_smoth(method = lm)
data |>
ggplot(aes(x = flipper_len, y = bill_len)) +
geom_smooth(method = lm)
data |>
ggplot(aes(x = flipper_len, y = bill_len)) +
geom_smooth(method = lm) +
ylim(0, 60) +
xlim(0, 235)
data |>
ggplot(aes(x = flipper_len, y = bill_len)) +
geom_smooth(method = lm) +
ylim(0, 60) +
xlim(150, 235)
data |>
ggplot(aes(x = flipper_len, y = bill_len)) +
geom_smooth(method = lm) +
ylim(0, 60) +
xlim(170, 235)
library(tidyverse)
hits = billboard
View(hits)
hits |>
filter(artist == "Jay-Z")
hits_20_weeks = hits |>
select(artist:wk20)
View(hits_20_weeks)
double_O_hits = hits_20_weeks |>
mutate(after_turn = date.entered >= as.Date("2000-01-01"))
View(double_O_hits)
hits |>
group_by(artist) |>
summarise(n = n())
hits |>
group_by(artist) |>
summarise(n = n()) |>
arrange(desc(n))
hits |>
group_by(artist) |>
summarise(n = n()) |>
filter(n > 1)
hits |>
group_by(artist) |>
summarise(n = n()) |>
arrange(desc(n)) |>
filter(n > 1)
data = read_csv("https://raw.githubusercontent.com/kekecsz/PSZB17-210-Data-analysis-seminar/master/seminar_03/lovoo_v3_users_api-results.csv")
View(data)
data |>
rename(
profile_visits = counts_profileVisits,
like_count = counts_kisses,
interest_to_date = flirtInterests_date
)
data |>
ggplot(aes(x = profile_visits, y = like_count)) +
geom_point()
data_clean = data |>
rename(
profile_visits = counts_profileVisits,
like_count = counts_kisses,
interest_to_date = flirtInterests_date
)
data = data |>
rename(
profile_visits = counts_profileVisits,
like_count = counts_kisses,
interest_to_date = flirtInterests_date
)
data |>
ggplot(aes(x = profile_visits, y = like_count)) +
geom_point()
data |>
ggplot(aes(x = profile_visits, y = like_count, color = interest_to_date)) +
geom_point()
data |>
ggplot(aes(x = profile_visits, y = like_count, color = interest_to_date)) +
geom_point() +
geom_smooth()
data |>
filter(profile_visits < 5000) |>
ggplot(aes(x = profile_visits, y = like_count, color = interest_to_date)) +
geom_point() +
geom_smooth()
data |>
filter(profile_visits < 5000) |>
ggplot(aes(x = profile_visits, y = like_count, color = interest_to_date)) +
geom_point() +
geom_smooth(method = "lm")
data |>
ggplot(aes(x = profile_visits, y = like_count)) +
geom_point(aes(color = interest_to_date),
shape = 3, fill = "white") +
geom_smooth()
data |>
ggplot(aes(x = age)) +
geom_histogram()
data |>
filter(profile_visits < 3000) |>
ggplot(aes(x = profile_visits, fill = factor(verified))) +
geom_density(alpha = 0.5)
data |>
filter(profile_visits < 1000) %>%
ggplot() +
aes(x = profile_visits, fill = factor(verified)) +
geom_dotplot(binwidth = 10)
data |>
ggplot() +
aes(x = genderLooking) +
geom_bar()
data |>
ggplot() +
aes(y = age, x = genderLooking) +
geom_boxplot()
data |>
ggplot() +
aes(y = age, x = genderLooking) +
geom_violin()
data |>
ggplot() +
aes(y = age, x = genderLooking) +
geom_violin()
data |>
ggplot() +
aes(y = age, x = genderLooking) +
geom_violin(adjust = 0.5)
data |>
ggplot() +
aes(y = age, x = genderLooking) +
geom_violin() +
geom_jitter()
data |>
ggplot() +
aes(y = age, x = genderLooking) +
geom_jitter(alpha = 0.7) +
geom_violin(alpha = 0.5)
data |>
filter(genderLooking == "F", age < 23) %>%
ggplot() +
aes(x = like_count,
y = counts_pictures,
label = name) +
geom_point(shape=21, fill = "white", size = 20) +
geom_text()
data |>
filter(country == "DE" | country == "FR") %>%
ggplot() +
aes(x = country, group = factor(isNew), fill = factor(isNew)) +
geom_bar(position = "stack")
data |>
filter(country == "DE" | country == "FR") %>%
ggplot() +
aes(x = country, group = factor(isNew), fill = factor(isNew)) +
geom_bar()
data |>
filter(country == "DE" | country == "FR") %>%
ggplot() +
aes(x = country, group = factor(isNew), fill = factor(isNew)) +
geom_bar(position = "fill")
data |>
filter(country == "DE" | country == "FR") %>%
ggplot() +
aes(x = country, group = factor(isNew), fill = factor(isNew)) +
geom_bar(position = "stack")
data |>
filter(country == "DE" | country == "FR") %>%
ggplot() +
aes(x = country, group = factor(isNew), fill = factor(isNew)) +
geom_bar(position = "stack") +
coord_flip()
data |>
filter(country == "DE" | country == "FR") %>%
ggplot() +
aes(x = country, group = factor(isNew), fill = factor(isNew)) +
geom_bar(position = "fill") +
facet_wrap(~genderLooking)
data |>
filter(country == "DE" | country == "FR") %>%
ggplot() +
aes(x = age) +
geom_density() +
facet_grid(factor(isNew)~genderLooking)
data_A <- read_csv("data/datafile_A.csv")
library(tidyverse)
data_A <- read_csv("data/datafile_A.csv")
library(here)
here("C:\University\ELTE\PhD\Okulás\1st semester\Statisztikai programozás\elte-ppk-r-course-Fall-2025")
here("C:/University/ELTE/PhD/Okulás/1st semester/Statisztikai programozás/elte-ppk-r-course-Fall-2025")
data_A <- read_csv("data/assignment_4_dataset_A.csv")
i_am("C:/University/ELTE/PhD/Okulás/1st semester/Statisztikai programozás/elte-ppk-r-course-Fall-2025")
i_am("University/ELTE/PhD/Okulás/1st semester/Statisztikai programozás/elte-ppk-r-course-Fall-2025")
i_am()
i_am("README.md")
setwd(here())
getwd()
setwd(here("C:\University\ELTE\PhD\Okulás\1st semester\Statisztikai programozás\elte-ppk-r-course-Fall-2025"))
setwd(here("C:/University/ELTE/PhD/Okulás/1st semester/Statisztikai programozás/elte-ppk-r-course-Fall-2025"))
getwd()
data_A <- read_csv("data/assignment_4_dataset_A.csv")
i_am()
getwd()
data_A <- read_csv("data/assignment_4_dataset_A.csv")
data_A <- read_csv("data/assignment_4_dataset_A.sav")
data_A <- read_sav("data/assignment_4_dataset_A.sav")
data_A <- read.spss("data/assignment_4_dataset_A.sav")
library(haven)
data_A <- read.spss("data/assignment_4_dataset_A.sav")
data_A <- read_sav("data/assignment_4_dataset_A.sav")
data_a <- read_sav("data/assignment_4_dataset_A.sav")
data_b <- read_sav("data/assignment_4_dataset_B.sav")
data_a <- read_sav("data/assignment_4_dataset_A.sav")
data_b <- read_sav("data/assignment_4_dataset_B.sav")
View(data_a)
data_a = data_a |>
rename(stai = STAI_trait) |>
mutate(ID = str_detect(ID, "ID"))
data_a = data_a |>
rename(stai = STAI_trait) |>
mutate(ID = str_remove(ID, "ID"))
data_a <- read_sav("data/assignment_4_dataset_A.sav")
data_a = data_a |>
rename(stai = STAI_trait) |>
mutate(ID = str_remove(ID, "ID"))
data_a <- read_sav("data/assignment_4_dataset_A.sav")
data_a_clean = data_a |>
rename(stai = STAI_trait) |>
mutate(ID = str_remove(ID, "ID_"))
View(data_a_clean)
data_a_clean = data_a |>
rename(stai = STAI_trait) |>
mutate(ID = str_remove(ID, "ID_"),
hospital = str_remove(hospital, "hospital_"))
data_a_clean = data_a |>
rename(stai = STAI_trait) |>
mutate(ID = as.integer(str_remove(ID, "ID_")),
hospital = as.factor(str_remove(hospital, "hospital_")))
is.factor(data_a_clean$hospital)
is.integer(data_a_clean$ID)
data_a_clean = data_a |>
rename(stai = STAI_trait) |>
mutate(ID = as.integer(str_remove(ID, "ID_")),
hospital = as.factor(str_remove(hospital, "hospital_")),
sex = str_to_lower(sex))
distribution_function = function(variable){
ggplot(data_a_clean, aes(x = variable)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(title = paste("Distribution of", deparse(substitute(variable))),
x = deparse(substitute(variable)),
y = "Frequency") +
theme_minimal()
}
for (var in c("pain", "age", "weight", "stai", "pain_cat", "mindfulness", "cortisol_serum", "cortisol_saliva")) {
print(distribution_function(data_a_clean[[var]]))
}
variables = c("pain", "age", "weight", "stai", "pain_cat", "mindfulness", "cortisol_serum", "cortisol_saliva")
for (var in variables) {
print(distribution_function(data_a_clean[[var]]))
}
variables = c("pain", "age", "weight", "stai", "pain_cat", "mindfulness", "cortisol_serum", "cortisol_saliva")
for (variable in variables) {
print(distribution_function(data_a_clean[[variable]]))
}
distribution_function = function(variable){
ggplot(data_a_clean, aes(x = variable)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(title = paste("Distribution of"),
x = deparse(substitute(variable)),
y = "Frequency") +
theme_minimal()
}
variables = c("pain", "age", "weight", "stai", "pain_cat", "mindfulness", "cortisol_serum", "cortisol_saliva")
for (variable in variables) {
for (variable in variables) {
print(distribution_function(data_a_clean[[variable]]))
}
distribution_function = function(variable){
ggplot(data_a_clean, aes(x = variable)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(title = paste("Distribution of"),
x = deparse(substitute(variable)),
y = "Frequency") +
theme_minimal()
}
variables = c("pain", "age", "weight", "stai", "pain_cat", "mindfulness", "cortisol_serum", "cortisol_saliva")
for (variable in variables) {
print(distribution_function(data_a_clean[[variable]]))
}
distribution_function = function(variable){
ggplot(data_a_clean, aes(x = variable)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(title = paste("Distribution of"),
x = deparse(substitute(variable)),
y = "Frequency") +
theme_minimal()
}
variables = c("pain", "age", "weight", "stai", "pain_cat", "mindfulness", "cortisol_serum", "cortisol_saliva")
for (variable in variables) {
print(distribution_function(data_a_clean[[variable]]))
}
fds
fds
fhg
hgfjh
hg
distribution_function = function(variable){
ggplot(data_a_clean, aes(x = variable)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(title = paste("Distribution of"),
x = deparse(substitute(variable)),
y = "Frequency") +
theme_minimal()
}
variables = c("pain", "age", "weight", "stai", "pain_cat", "mindfulness", "cortisol_serum", "cortisol_saliva")
for (variable in variables) {
print(distribution_function(data_a_clean[[variable]]))
}
